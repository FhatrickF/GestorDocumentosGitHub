@using Microsoft.AspNet.Identity
@model mvc4.Models.Documento
@{
    ViewBag.Title = "Nuevo documento";
}

@{
    string rolUs = "";
    try
    {
        rolUs = Session["rol"].ToString();
    }
    catch
    {
        Response.Redirect("~/Account/Login");
    }
}
<script>
    var IdNota = '@ViewBag.IdNota';
    var idLista = "";
    var referencias = "";
    ready(function () {

        $('#Fecha').datepicker({
            autoclose: true,
            format: 'dd/mm/yyyy'
        })

        CKEDITOR.replace('txtNota', {
            height: 300,
            toolbarGroups: [{
                "name": "basicstyles",
                "groups": ["basicstyles"]
            },
            {
                "name": "links",
                "groups": ["links"]
            },
            {
                "name": "paragraph",
                "groups": ["list", 'indent', "blocks", "align"]
            },
            {
                "name": "document",
                "groups": ["mode"]
            },
            {
                "name": "insert",
                "groups": ["insert"]
            },
            {
                "name": "styles",
                "groups": ["styles"]
            },
            {
                "name": "about",
                "groups": ["about"]
            },
            ],
            removeButtons: 'Iframe'
        });

        CKEDITOR.replace('Texto', {
            height: 500,
            toolbarGroups: [{
                "name": "basicstyles",
                "groups": ["basicstyles"]
            },
            {
                "name": "links",
                "groups": ["links"]
            },
            {
                "name": "paragraph",
                "groups": ["list", "blocks", "align"]
            },
            {
                "name": "document",
                "groups": ["mode"]
            },
            {
                "name": "insert",
                "groups": ["insert"]
            },
            {
                "name": "styles",
                "groups": ["styles"]
            },
            {
                "name": "about",
                "groups": ["about"]
            },
            ],
            removeButtons: 'Iframe'
        });

        $('#aTab4').click(function () {
            var params = new Object();
            $('#dvCargandoHistorial').html("Buscando historial ...");
            $('#dvCargandoHistorial').show();
            params.Id = "@Model.IdDocumento";
            $.ajax({
                type: "POST",
                url: "/Document/Ma_Historial",
                content: "application/json; charset=utf-8",
                dataType: "json",
                data: params,
                success: function (d) {
                    if (d.Error == null) {
                        $('#dvCargandoHistorial').hide();
                        var historial = "";
                        for (var x = 0; x < d.length; x++) {
                            historial += d[x].idUser + ".- " + d[x].hora + "<br />";
                            historial += d[x].descripcion + "<br />";
                            historial += "<br />";
                        }
                        $('#divHistorial').html(historial);
                    } else {
                        $('#dvCargandoHistorial').show();
                        $('#dvCargandoHistorial').html(d.Error);
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    $('#dvCargandoHistorial').show();
                    $('#dvCargandoHistorial').html("Ocurrió un error al buscar historial del documento");
                }
            });
        });

        $('#btn-publicar').click(function () {
            $('#divTextoCambio').modal('show');
        });

        $('#btnAceptarEliminarReferencia').click(function () {
            location.href = "/Document/Ma_EliminaReferencias?referencias=" + referencias;
        });

        $('#btn-eliminarBorrador').click(function () {
            $('#divEliminaBorrador').modal('show');
        });

        $('#btnAceptarEliminarBorrador').click(function () {
            location.href = "../Ma_EliminaBorrador?id=@Model.IdDocumento";
        });

        $('#btn-reasignarBorrador').click(function () {
            $('#divTextoDevolverUsuario').modal('show');
        });

        $('#btnRechazarCambio').click(function () {
            var t = $('#txtAreaMotivoRechazo').val();
            if (t == "") {
                alert("Debe indicar el motivo de devolución de los cambios realizados");
                return 0;
            }
            $('#textoReasignacion').val(t);
            $('#usuarioReasignacion').val($('#selecUsuarioReasignacion').val());
            $("#setFormRechaza").submit();
        });

        $('#btnAceptarCambio').click(function () {
            var t = $('#txtAreaModificacion').val();
            if (t == "") {
                alert("Debe indicar una descripción del cambio realizado");
                return 0;
            }
            $('#TextoCambio').val(t);
            $('#EsBorrador').val("false");
            $('#Publicar').val("true");
            $("#setForm").submit();
        });

        $("#btnAceptarNota").click(function () {
            var t = CKEDITOR.instances['txtNota'].getData()
            if (t == "") {
                alert("Debe escribir el texto de la nota");
                return 0;
            }
            var params = new Object();
            params.Nota = new Object();
            params.Nota.TextoNota = t;
            var n = $("#coleccionNota").val();
            var cn = "";
            if (n.length == 0) {
                alert("Debe seleccionar al menos una colección");
                return 0;
            }
            for (var x = 0; x < n.length; x++) {
                cn += n[x] + "_";
            }
            params.Nota.Coleccion = cn;
            $.ajax({
                type: "POST",
                url: "/Document/Nota",
                content: "application/json; charset=utf-8",
                dataType: "json",
                data: params,
                success: function (d) {
                    if (d.Result == 0) {
                        //var inserta = '<a href="#" class="linkNota" style="color:blue; cursor:pointer" id="' + d.TextoNota + '">[Nota]</a>';
                        var inserta = "<img class=\"linkNota\" id=\"" + d.TextoNota + "\" src=\"/Content/img/flecha.png\" style=\"cursor:pointer; display:inline; height:12px; width:15px\" />";
                        CKEDITOR.instances['Texto'].insertHtml(inserta);
                    }
                    else {
                        alert(d.TextoNota);
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    alert("Ocurrió un error al crear la nueva nota. Por favor, contáctese con el administrador.");
                }
            });

            $('#myModal').modal('hide')
        });

        $('#btn-guardar').click(function () {
            $('#EsBorrador').val("true");
            $('#Publicar').val("false");
            $('#ColeccionGlosa').val($('#divColeccion').html());
            $('#CategoriaGlosa').val($('#divCategoria').html());
            $('#SeccionGlosa').val($('#divSeccion').html());
            $('#TemaGlosa').val($('#divTema').html());
            $("#setForm").submit();
        });

        $('#btnMyModal').click(function () {
            CKEDITOR.instances['txtNota'].setData('');
            $('#myModal').modal('show');
        });

        if (IdNota != "") {
            location.href = "#" + IdNota;
        }

        $('#Coleccion, #Seccion, #Categoria, #Tema').click(function () {
            idLista = $(this).attr("id");
            showListas(idLista);
        });

        $('body').on('click', '.divLista', function myfunction() {
            if ($(this).hasClass("divSelected"))
                $(this).removeClass("divSelected");
            else
                $(this).addClass("divSelected");
        });

        $('#btnAceptarLista').click(function () {
            var lista = "";
            $(".divLista").each(function (indice, elemento) {
                if ($(elemento).hasClass("divSelected")) {
                    lista += $(elemento).html() + ", ";
                }
            });
            if (lista == "") {
                alert("Debe seleccionar al menos una colección");
                return 0;
            }

            $('#div' + idLista).html(lista.substring(0, lista.length -2));
            $('#divDetalleListado').modal('hide');
        });

        $('#btnDialogImagen').click(function () {
            $('#divUploadImagen').modal('show');
        });

        var _URL = window.URL || window.webkitURL;
        $("#f_UploadImage").on('change', function () {
            var file, img;
            if ((file = this.files[0])) {
                img = new Image();
                img.onload = function () {
                    sendFile(file);
                };
                img.onerror = function () {
                    alert("Tipo de archivo no válido:" + file.type);
                };
                img.src = _URL.createObjectURL(file);
            }
        });
    });

    function sendFile(file) {

        var formData = new FormData();
        formData.append('file', $('#f_UploadImage')[0].files[0]);
        $.ajax({
            type: 'post',
            url: '/upImageDoe.ashx?Fecha=@Model.Fecha',
            data: formData,
            success: function (status) {
                if (status != 'error') {
                    var rutaImg = "../ImagenesDoe?imagen=" + status;
                    var imgHtml = "<img src=\"" + rutaImg + "\" /><br />";
                    imgHtml = "<a href=\"" + rutaImg + "\" target=\"_blank\">" + imgHtml + "</a>";
                    CKEDITOR.instances['Texto'].insertHtml(imgHtml);
                    $('#divUploadImagen').modal('hide');
                }
            },
            processData: false,
            contentType: false,
            error: function () {
                alert("Ocurrió un error al subir la imagen. Por favor, inténtelo nuevamente.");
            }
        });
    }

    function showListas(idLista) {
        lista = $('#div' + idLista).html();
        var params = new Object();
        params.lista = lista;
        params.tipo = idLista;
        params.coleccion = $('#divColeccion').html();
        $.ajax({
            type: "POST",
            url: "/Document/GetLista",
            content: "application/json; charset=utf-8",
            dataType: "json",
            data: params,
            success: function (d) {
                if (d.Detalles != null) {
                    var txt = "";
                    for (var x = 0; x < d.Detalles.length; x++) {
                        var seleccionado = "";
                        var n = d.Detalles[x].Nombre;
                        if (n.indexOf(".::") > -1) {
                            txt += "<div style=\"text-align:center\"><strong>" + d.Detalles[x].Nombre + "</strong></div>";
                        } else {
                            if (d.Detalles[x].Seleccionado)
                                seleccionado = " divSelected";

                            txt += "<div id=\"l_" + (x + 1) + "\" class=\"divLista" + seleccionado + "\">" + d.Detalles[x].Nombre + "</div>";
                        }
                    }
                    $('#divDetalleListado').modal('show');
                    $('#divDetalleListadoTitulo').text(idLista);
                    $('#txtDetalleListado').html(txt);
                } else {
                    alert(d);
                }
            },
            error: function (xhr, textStatus, errorThrown) {
                alert("Ocurrió un error al buscar listado " + idLista);
            }
        });
    }

    function eliminaReferencia(link, doc) {
        referencias = link + "-" + doc;
        $('#divEliminaReferencia').modal('show')
    }
</script>


<section class="content-header">
    <h1>
        @ViewBag.Title
    </h1>
</section>

<section class="content">
    @using (Html.BeginForm("Ma_NuevoDocumento", "Document", FormMethod.Post, new { id = "setForm" }))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-md-12">
                <div class="box box-default">
                    <div class="box-header with-border">
                        <i class="fa fa-file-text-o"></i>
                        <h3 class="box-title">Nuevo documento</h3>
                    </div>
                    <div class="box-body">
                        <div class="row">
                            <div class="col-md-8">
                                @if (ViewBag.Estado == "Borrador")
                                {
                                    <div class="alert alert-danger alert-dismissable">
                                        <button class="close" type="button" data-dismiss="alert" aria-hidden="true">x</button>
                                        <h4>
                                            <i class="icon fa fa-ban"></i>
                                            Atención!
                                        </h4>
                                        Este es un borrador de la versión original
                                        @if (User.Identity.GetUserName() != ViewBag.Usuario)
                                        {
                                            <br />
                                            <strong>Este borrador fue iniciado el usuario @ViewBag.Usuario</strong>
                                        }
                                    </div>
                                }
                                else if (ViewBag.Estado == "Pendiente")
                                {
                                    <div class="alert alert-info alert-dismissable">
                                        <button class="close" type="button" data-dismiss="alert" aria-hidden="true">x</button>
                                        <h4>
                                            <i class="icon fa fa-ban"></i>
                                            Atención!
                                        </h4>
                                        El documento se encuentra en proceso de revisión. No se pueden realizar cambios.
                                    </div>
                                }
                                <label>Texto del documento</label>

                                <div class="alert alert-info">
                                    <h4>
                                        <i class="icon fa fa-info">
                                        </i>
                                        Atención!
                                    </h4>
                                    Este es un documento nuevo
                                </div>                              

                                @Html.TextAreaFor(m => m.Texto, new { @class = "form-control", row = "10", cols = "80" })

                                @Html.HiddenFor(m => m.IdDocumento)
                                @Html.HiddenFor(m => m.id)
                                @Html.HiddenFor(m => m.EsBorrador)
                                @Html.HiddenFor(m => m.Publicar)
                                @Html.HiddenFor(m => m.ColeccionGlosa)
                                @Html.HiddenFor(m => m.SeccionGlosa)
                                @Html.HiddenFor(m => m.CategoriaGlosa)
                                @Html.HiddenFor(m => m.TemaGlosa)
                                @Html.HiddenFor(m => m.TextoCambio)
                                @Html.HiddenFor(m => m.Fecha)
                                <br />
                                <div class="row">
                                    <div class="col-md-6">
                                        @if (ViewBag.Estado != "Pendiente")
                                        {
                                            if (Model.EsBorrador)
                                            {
                                                <button id="btn-eliminarBorrador" type="button" class="btn btn-danger btn-block">Eliminar borrador</button>
                                                if (rolUs == GestorDocumentosEntities.Sys_RolEntity.ADMINISTRADOR)
                                                {
                                                    <button id="btn-reasignarBorrador" type="button" class="btn btn-info btn-block">Asignar borrador @ViewBag.Usuario</button>
                                                }
                                            }
                                        }
                                    </div>
                                    @if (ViewBag.Estado != "Pendiente")
                                    {
                                        <div class="col-md-6" style="text-align: right">
                                            <button id="btn-guardar" type="button" class="btn btn-primary btn-block">Guardar documento</button>
                                            @if (Model.EsBorrador)
                                            {
                                                <button id="btn-publicar" type="button" class="btn btn-success btn-block">Publicar</button>
                                                <br />

                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="nav-tabs-custom">
                                    <ul class="nav nav-tabs">
                                        <li class="active">
                                            <a href="#tab_1" data-toggle="tab">Metadatos</a>
                                        </li>
                                    </ul>
                                    <div class="tab-content">
                                        <div id="tab_1" class="tab-pane active">
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            <div class="form-group">
                                                <label>Colecciones: </label>
                                                <div id="divColeccion">
                                                    @Html.Raw(Model.ColeccionGlosa)
                                                </div> <span><a href="#" id="Coleccion" style="display: inline;">[Editar]</a></span>
                                            </div>
                                            <div class="form-group">
                                                <div class="form-group">
                                                    <label>Fecha publicación:</label>
                                                    <div class="input-group date">
                                                        <div class="input-group-addon">
                                                            <i class="fa fa-calendar"></i>
                                                        </div>
                                                        <input id="Fecha" value="@Model.Fecha" name="Fecha" class="form-control pull-right" type="text" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="Norma">Norma</label>
                                                <select id="Norma" name="Norma" class="form-control">
                                                    <option value="0">Seleccionar</option>
                                                    @for (var n = 0; n < @ViewBag.ListaNormas.Length; n++)
                                                    {
                                                        if (ViewBag.SelectNorma == @ViewBag.ListaNormas[n])
                                                        {
                                                            <option selected value="@ViewBag.ListaNormas[n]">@ViewBag.ListaNormas[n]</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@ViewBag.ListaNormas[n]">@ViewBag.ListaNormas[n]</option>
                                                        }
                                                    }
                                                    </select>

                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Numero, "Número")
                                                @Html.TextBoxFor(m => m.Numero, new { @class = "form-control" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Organismo, "Organismo")
                                                @Html.TextBoxFor(m => m.Organismo, new { @class = "form-control" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Suborganismo, "Sub organismo")
                                                @Html.TextBoxFor(m => m.Suborganismo[0], new { @class = "form-control" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Titulo, "Título")
                                                @Html.TextAreaFor(m => m.Titulo, new { @class = "form-control", row = "10", cols = "80" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Articulo, "Artículo")
                                                @Html.TextBoxFor(m => m.Articulo, new { @class = "form-control" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Inciso, "Inciso")
                                                @Html.TextBoxFor(m => m.Inciso, new { @class = "form-control" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Tribunal, "Tribunal")
                                                @Html.TextBoxFor(m => m.Tribunal, new { @class = "form-control" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Partes, "Partes")
                                                @Html.TextBoxFor(m => m.Partes, new { @class = "form-control" })
                                            </div>
                                            <div class="form-group">
                                                <label>Seccion: </label>
                                                <div id="divSeccion">
                                                    @Html.Raw(Model.SeccionGlosa)
                                                </div> <span><a href="#" id="Seccion" style="display: inline;">[Editar]</a></span>
                                            </div>
                                            <div class="form-group">
                                                <label>Categoría: </label>
                                                <div id="divCategoria">
                                                    @Html.Raw(Model.CategoriaGlosa)
                                                </div> <span><a href="#" id="Categoria" style="display: inline;">[Editar]</a></span>
                                            </div>
                                            <div class="form-group">
                                                <label>Tema: </label>
                                                <div id="divTema">
                                                    @Html.Raw(Model.TemaGlosa)
                                                </div> <span><a href="#" id="Tema" style="display: inline;">[Editar]</a></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <!-- form rechaza borrador -->
    @using (Html.BeginForm("Ma_RechazarBorrador", "Document", FormMethod.Post, new { id = "setFormRechaza" }))
    {
        @Html.AntiForgeryToken()
        <input type="hidden" name="textoReasignacion" id="textoReasignacion" value="" />
        <input type="hidden" name="usuarioReasignacion" id="usuarioReasignacion" value="@ViewBag.Usuario" />
        <input type="hidden" name="documentoReasignacion" id="documentoReasignacion" value="@Model.IdDocumento" />
    }
    <!-- Modal -->
    <div class="modal fade" id="divDetalleListado" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="divDetalleListadoTitulo"></h4>
                </div>
                <div class="modal-body" id="txtDetalleListado">

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                    <button type="button" id="btnAceptarLista" class="btn btn-primary">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
    <!-- texto motivo cambio -->
    <div class="modal fade" id="divTextoCambio" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="divDetalleListadoTitulo">Descripción de la modificación</h4>
                </div>
                <div class="modal-body" id="txtDetalleListado">
                    Indique una breve descripción de la modificación<br />
                    realizada al documento.
                    <br /><br />
                    <textarea id="txtAreaModificacion" style="width: 100%" rows="5"></textarea>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                    <button type="button" id="btnAceptarCambio" class="btn btn-primary">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Elimina referencias -->
    <div class="modal fade" id="divEliminaReferencia" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="divTituloEliminaReferencia">Eliminar referencia</h4>
                </div>
                <div class="modal-body">
                    ¿Está seguro que desa eliminar la referencia indicada?
                    <br /><br />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                    <button type="button" id="btnAceptarEliminarReferencia" class="btn btn-primary">Sí</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Elimina borrador -->
    <div class="modal fade" id="divEliminaBorrador" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="divTituloEliminaBorrador">Eliminar Borrador</h4>
                </div>
                <div class="modal-body">
                    ¿Está seguro que desa eliminar el borrador?
                    <br /><br />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                    <button type="button" id="btnAceptarEliminarBorrador" class="btn btn-primary">Sí</button>
                </div>
            </div>
        </div>
    </div>
    <!-- texto motivo devolucion usuario -->
    <div class="modal fade" id="divTextoDevolverUsuario" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="divDetalleListadoTitulo">Motivo para rechazar cambios</h4>
                </div>
                <div class="modal-body" id="txtDetalleListado">
                    Indique una breve descripción del motivo para reasignar cambios<br />
                    al borrador y el usuario indicado.
                    <br /><br />
                    <select id="selecUsuarioReasignacion" class="form-control">
                        @if (ViewBag.listadoUsuarios != null)
                        {
                            foreach (var us in ViewBag.listadoUsuarios)
                            {
                                if (us.UserName == ViewBag.Usuario)
                                {
                                    <option value="@us.UserName" selected="selected">@us.UserName</option>
                                }
                                else
                                {
                                    <option value="@us.UserName">@us.UserName</option>
                                }
                            }
                        }
                    </select>
                    <br />
                    <textarea id="txtAreaMotivoRechazo" class="form-control" style="width: 100%" rows="5"></textarea>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                    <button type="button" id="btnRechazarCambio" class="btn btn-primary">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
    <!-- upload imagenes -->
    <div class="modal fade" id="divUploadImagen" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="divDetalleUploadImagen">Subir imágenes</h4>
                </div>
                <div class="modal-body" id="txtDetalleListado">
                    <div class="alert alert-warning">
                        <h4>
                            <i class="icon fa fa-warning"></i>
                            Atención!
                        </h4>
                        Estimado usuario, asegúrese de hacer click en el lugar del texto donde quiera que aparezca la imagen antes de seleccionarla.
                    </div>
                    <br /><br />
                    <input type="file" class="upload" id="f_UploadImage"><br />
                    <br />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                </div>
            </div>
        </div>
    </div>

</section>

@section scripts{

}